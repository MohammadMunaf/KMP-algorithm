    int m,n;
    void calculateLps(vector<int>&lps,string pat){
        int length=0,i=1;
        lps[0]=0;
        while(i<pat.length()){
            if(pat[i]==pat[length]){
                length++;
                lps[i]=length;
                i++;
            }else{ 
                if(length!=0)  length=lps[length-1];
                else{
                    lps[i]=0;
                    i++;
                }
            }
        }
    }
    vector<int> kmp(string pat,string txt){
        m=pat.length();
        n=txt.length();
        vector<int>lps(m,0),ans;
        calculateLps(lps,pat);
        int i=0,j=0;
        while(i<n){
            if(pat[j]==txt[i]){
                i++;
                j++;
            }if(j==m){
                ans.push_back(i-m+1);
                j=lps[j-1];
            }else if(pat[j]!=txt[i]){
                if(j!=0)    j=lps[j-1];
                else i++;
            }
        }
        return ans;
    }
